@using static PanoramicData.Blazor.PDResizePane
@inherits ComponentBase

@if (IsSplitMode)
{
	<div class="pdchat-container-wrapper">
		<PDSplitter @key="@($"chat-splitter-{ChatService.DockMode}")"
					Direction="@SplitDirection.Horizontal"
					GutterSize="@GutterSize"
					CssClass="pdchat-container-splitter">
			@if (ChatService.DockMode == PDChatDockMode.Left)
			{
				<PDSplitPanel @key="@($"chat-panel-{ChatService.DockMode}")" Size="@ChatPanelSize" MinSize="@ChatMinSize">
					<CascadingValue Value="this" Name="ChatContainer">
						@ChatContent
					</CascadingValue>
				</PDSplitPanel>
				<PDSplitPanel @key="@($"content-panel-{ChatService.DockMode}")" Size="@(TotalSize - ChatPanelSize)" MinSize="@ContentMinSize">
					@ChildContent
				</PDSplitPanel>
			}
			else
			{
				<PDSplitPanel @key="@($"content-panel-{ChatService.DockMode}")" Size="@(TotalSize - ChatPanelSize)" MinSize="@ContentMinSize">
					@ChildContent
				</PDSplitPanel>
				<PDSplitPanel @key="@($"chat-panel-{ChatService.DockMode}")" Size="@ChatPanelSize" MinSize="@ChatMinSize">
					<CascadingValue Value="this" Name="ChatContainer">
						@ChatContent
					</CascadingValue>
				</PDSplitPanel>
			}
		</PDSplitter>
	</div>
}
else
{
	@* For non-split modes (corners, fullscreen, minimized), render content normally with chat as overlay *@
	<div class="pdchat-container-wrapper">
		@ChildContent
		<CascadingValue Value="this" Name="ChatContainer">
			@ChatContent
		</CascadingValue>
	</div>
}

