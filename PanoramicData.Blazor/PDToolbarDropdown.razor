@using PanoramicData.Blazor.Extensions
<div class="pdtoolbaritem @(IsVisible ? "" : "pd-hidden") @(ShiftRight ? "align-right" : "") @ItemCssClass">

    <PDDropDown CloseOption="CloseOption"
                CssClass="@($"btn {CssClass} dropdown-toggle {ButtonSizeCssClass}")"
                IsEnabled="IsEnabled"
                IconCssClass="@IconCssClass"
                ShowOnMouseEnter="ShowOnMouseEnter"
                Size="Size ?? ButtonSizes.Medium"
                Text="@Text"
                TextCssClass="@TextCssClass"
                Visible="@IsVisible">

        <table>
            @foreach (var item in Items)
            {
                if (item.IsVisible)
                {
                    @if (item.IsSeparator)
                    {
                        <tr class="pddropdownseparator">
                            <td colspan="2"></td>
                        </tr>
                    }
                    else
                    {
                        <tr class="pddropdownmenuitem @(item.IsDisabled ? "disabled" : "")"
                            @onclick="() => OnClick(item.GetKeyOrText())">

                            @if (string.IsNullOrWhiteSpace(item.Content))
                            {
                                <td class="text-nowrap">
                                    <span class="ps-1 @(string.IsNullOrWhiteSpace(item.IconCssClass) ? "fa fa-fw" : item.IconCssClass)"></span>
                                    <span class="text-nowrap @(item.ShortcutKey.HasValue ? "" : " pe-1")">@item.Text.GetShortcutMarkup()</span>
                                </td>
                                <td class="text-nowrap text-muted small mw-100-px text-right">
                                    @if (item.ShortcutKey.HasValue)
                                    {
                                        <span class="pe-1">@item.ShortcutKey.ToString()</span>
                                    }
                                </td>
                            }
                            else
                            {
                                <td colspan="2">
                                    @((MarkupString)item.Content)
                                </td>
                            }
                        </tr>
                    }
                }
            }
        </table>

    </PDDropDown>

</div>
<CascadingValue Value="(PDToolbarDropdown)this" Name="ToolbarDropdown">
    @ChildContent
</CascadingValue>