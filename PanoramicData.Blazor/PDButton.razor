@using PanoramicData.Blazor.Extensions

@if (string.IsNullOrWhiteSpace(Url))
{
	<button @attributes="Attributes"
			class="pd-button btn @CssClass @ButtonSizeCssClass"
			disabled="@(ActualEnabledState ? null : "true")"
			id="@Id"
			title="@ToolTip.AppendShortcut(ShortcutKey)"
			@onclick="OnClickAsync"
			@onclick:preventDefault="PreventDefault"
			@onclick:stopPropagation="StopPropagation"
			@onmousedown="MouseDown"
			@onmouseenter="MouseEnter"
			@onmousedown:preventDefault="PreventDefault"
			@onmousedown:stopPropagation="StopPropagation">
		@if (ChildContent is null)
		{
			var hasIcon = !string.IsNullOrWhiteSpace(IconCssClass);
			var hasText = !string.IsNullOrWhiteSpace(Text);

			if (hasIcon)
			{
				<span class="icon @GetIconCssClass()"></span>
			}

			var textPaddingClass = string.Empty;
			if (hasText && hasIcon)
			{
				// Add padding before the text
				textPaddingClass = "ps-1";
			}

			<span class="@textPaddingClass @TextCssClass">@Text.GetShortcutMarkup()</span>
		}
		else
		{
			@ChildContent
		}
	</button>
}
else
{
	<a @attributes="Attributes"
	   href="@Url" target="@Target"
	   class="pd-button btn @CssClass @ButtonSizeCssClass"
	   disabled="@(ActualEnabledState ? null : "true")"
	   id="@Id"
	   title="@ToolTip.AppendShortcut(ShortcutKey)"
	   @onclick="OnClickAsync"
	   @onclick:preventDefault="PreventDefault"
	   @onclick:stopPropagation="StopPropagation"
	   @onmousedown="MouseDown"
	   @onmousedown:preventDefault="PreventDefault"
	   @onmousedown:stopPropagation="StopPropagation">
		@if (ChildContent is null)
		{
			@if (!string.IsNullOrWhiteSpace(IconCssClass))
			{
				<span class="icon @GetIconCssClass()"></span>
			}
			<span class="@(string.IsNullOrWhiteSpace(IconCssClass) ? "" : "ps-1") @TextCssClass">@Text.GetShortcutMarkup()</span>
		}
		else
		{
			@ChildContent
		}
	</a>
}