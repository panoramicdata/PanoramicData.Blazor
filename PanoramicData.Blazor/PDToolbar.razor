<div class="pdtoolbar @CssClass">
	@ChildContent
	@if (Items != null)
	{
		foreach (var item in Items)
		{
			if (item is ToolbarButton button)
			{
				<PDToolbarButton Key=@button.Key
								 Text="@button.Text"
								 CssClass="@button.CssClass"
								 IconCssClass="@button.IconCssClass"
								 TextCssClass="@button.TextCssClass"
								 IsEnabled="@button.IsEnabled"
								 ToolTip="@button.ToolTip"
								 IsVisible="@button.IsVisible"
								 ShiftRight="@button.ShiftRight"
								 Size="@(button.Size ?? ButtonSize)"
								 Click="OnButtonClick" />
			}
			else if (item is ToolbarTextBox textbox)
			{
				<PDToolbarTextbox Key=@textbox.Key
								  Cleared="@(() => textbox.Cleared?.Invoke())"
								  CssClass="@textbox.CssClass"
								  DebounceWait="@textbox.DebounceWait"
								  IsEnabled="@textbox.IsEnabled"
								  IsVisible="@textbox.IsVisible"
								  ItemCssClass="@textbox.ItemCssClass"
								  Keypress="@((a) => textbox.Keypress?.Invoke(a))"
								  KeypressEvent="@textbox.KeypressEvent"
								  Label="@textbox.Label"
								  ShiftRight="@textbox.ShiftRight"
								  ShowClearButton="@textbox.ShowClearButton"
								  ToolTip="@textbox.ToolTip"
								  Value="@textbox.Value"
								  ValueChanged="@((a) => textbox.ValueChanged?.Invoke(a))"
								  Width="@textbox.Width" />
			}
			else if (item is ToolbarSeparator separator)
			{
				<PDToolbarSeparator Key=@separator.Key
									IsVisible="@separator.IsVisible"
									ShiftRight="@separator.ShiftRight" />
			}
		}
	}
</div>
