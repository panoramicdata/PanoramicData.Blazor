<PDDropDown @ref="_dropDown"
    IconCssClass="@IconCssClass"
    CssClass="@CssClass"
    CloseOption="PDDropDown.CloseOptions.Outside"
    DropDownShown="OnDropDownShown"
    KeyPress="OnDropDownKeyPress"
    ShowCaret="false">

    <div class="form-inline"
         style="width: max-content;">
        <select class="form-control form-control-sm ml-1"
                onclick="event.stopPropagation()"
                @onchange="OnFilterTypeChanged">

            <option value="@FilterTypes.NoFilter" selected="@(Filter.FilterType == FilterTypes.NoFilter)">No Filter</option>
            <option value="@FilterTypes.Equals" selected="@(Filter.FilterType == FilterTypes.Equals)">Equals</option>
            <option value="@FilterTypes.DoesNotEqual" selected="@(Filter.FilterType == FilterTypes.DoesNotEqual)">Does Not Equal</option>
            @if(DataType == FilterDataTypes.Text)
            {
                <option value="@FilterTypes.StartsWith" selected="@(Filter.FilterType == FilterTypes.StartsWith)">Starts With</option>
                <option value="@FilterTypes.EndsWith" selected="@(Filter.FilterType == FilterTypes.EndsWith)">Ends With</option>
                <option value="@FilterTypes.Contains" selected="@(Filter.FilterType == FilterTypes.Contains)">Contains</option>
                <option value="@FilterTypes.DoesNotContain" selected="@(Filter.FilterType == FilterTypes.DoesNotContain)">Does Not Contain</option>
            }
        </select>
        <input class="form-control form-control-sm mx-1"
               value="@Filter.Value"
               @onchange="OnFilterTextChange"
               onclick="event.stopPropagation()" />
    </div>

    @if (_values.Length > 0)
    {
        <div class="filter-values">
            <ul>
                @foreach(var value in _values)
                {
                    <li class="pd-pointer"
                        @onclick="@(() => OnValueClicked(value))">@value</li>
                }
            </ul>
        </div>
    }

</PDDropDown>