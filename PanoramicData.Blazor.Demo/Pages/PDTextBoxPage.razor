@page "/pdtextbox"

<h1>PDTextBoxPage</h1>

<DemoSourceView SourceFiles="Pages/PDTextBoxPage.razor, Pages/PDTextBoxPage.razor.cs">

	<PDToolbar>

		<PDToolbarButton Text="@(Enabled ? "Disable" : "Enable")"
						 Click="() => Enabled = !Enabled"
						 CssClass="btn-primary" />

		<PDToolbarButton Text="@(Visible ? "Hide" : "Show")"
						 Click="() => Visible = !Visible"
						 CssClass="btn-secondary" />

	</PDToolbar>

    <label>Text Box 1</label>
	<div class="input-group">
		<PDTextBox DebounceWait="250"
				   IsEnabled="Enabled"
				   IsVisible="Visible"
				   Keypress="OnKeypress"
				   KeypressEvent="true"
                   ShowSpeechButton="true"
				   Value="@Value"
				   ValueChanged="OnValueChanged" />

		<p class="mt-2">
			<strong>Note</strong>: Enabling Keypress events and / or Debounce (having DebounceWait > 0) can introduce latency issues when running
			on Blazor Server. This in-turn can lead to typing corruption and will have a negative user experience.
		</p>

	</div>

	<div>
		Value = @Value
	</div>

    <hr/>

    <label>Text Box 2</label>
    <div class="input-group">
        <PDTextBox DebounceWait="250"
                   ShowSpeechButton="true" />
    </div>

    <hr />

    <label>Example binding two PDTextAreas to a single backing field</label>
    <div class="input-group">
        <PDTextArea @ref="_textArea1"
                    Value="@_textArea"
                    ValueChanged="OnTextAreaChanged" />
        <PDTextArea @ref="_textArea2"
                    Value="@_textArea"
                    ValueChanged="OnTextAreaChanged" />
    </div>
    <div>
        Text Area Value: <b>@_textArea</b>
    </div>


	<EventView />

</DemoSourceView>