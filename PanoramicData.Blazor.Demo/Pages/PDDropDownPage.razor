@page "/pddropdown"

<h1>PDDropDown</h1>

<DemoSourceView SourceFiles="Pages/PDDropDownPage.razor, Pages/PDDropDownPage.razor.cs">

    <p>Dropdown 1 : Example showing normal and programmatic behaviour</p>

    <PDToolbar>
        <PDToolbarButton Click="@(() => _dropdown.HideAsync())" Text="Hide" />
        <PDToolbarButton Click="@(() => _dropdown.ShowAsync())" Text="Show" />
    </PDToolbar>

	<PDDropDown @ref="_dropdown"
                DropDownHidden="@(() => OnLogEvent("Dropdown 1 Hidden"))"
                DropDownShown="@(() => OnLogEvent("Dropdown 1 Shown"))"
                Text="Click Me">
		<div>
			<ul>
				<li>
					<PDLabel IconCssClass="fas fa-fw fa-dice-one"
							 Text="One" />
				</li>
				<li>
					<PDLabel IconCssClass="fas fa-fw fa-dice-two"
							 Text="Two" />
				</li>
				<li>
					<PDLabel IconCssClass="fas fa-fw fa-dice-three"
							 Text="Three" />
				</li>
				<li>
					<PDLabel IconCssClass="fas fa-fw fa-dice-four"
							 Text="Four" />
				</li>
				<li>
					<PDLabel IconCssClass="fas fa-fw fa-dice-five"
							 Text="Five" />
				</li>
				<li>
					<PDLabel IconCssClass="fas fa-fw fa-dice-six"
							 Text="Six" />
				</li>
			</ul>
		</div>
	</PDDropDown>

    <hr/>

    <p>Dropdown 2 : Example showing ShowOnMouseEnter and CloseOptions.InsideOrOutside behaviour</p>

    <PDDropDown CloseOption="PDDropDown.CloseOptions.InsideOrOutside"
                DropDownHidden="@(() => OnLogEvent("Dropdown 2 Hidden"))"
                DropDownShown="@(() => OnLogEvent("Dropdown 2 Shown"))"
                ShowOnMouseEnter="true"
                Text="Hover Here">
        <div>
            <PDButton Click="@(() => OnLogEvent("Option 1 Click"))" Text="Option 1" />
            <PDButton Click="@(() => OnLogEvent("Option 2 Click"))" Text="Option 2" />
            <PDButton Click="@(() => OnLogEvent("Option 3 Click"))" Text="Option 3" />
        </div>
    </PDDropDown>

	<EventView />



</DemoSourceView>
