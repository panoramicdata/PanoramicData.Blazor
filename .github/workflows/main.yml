name: Deploy to GitHub Pages
on:
  push:
    branches: [ main ]
jobs:
  deploy-to-github-pages:
    runs-on: ubuntu-latest
    steps:

    # Uses GitHub's checkout action to checkout code form the main branch
    - uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0

    # Sets up .NET Core SDK 9.x
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 9.x

    # Restore projects separately
    - name: Restore Projects
      run: dotnet restore PanoramicData.Blazor.WebAssembly/Client/PanoramicData.Blazor.WebAssembly.Client.csproj

    # Publishes Blazor project to the release-folder
    - name: Publish with dotnet
      run: dotnet publish PanoramicData.Blazor.WebAssembly/Client/PanoramicData.Blazor.WebAssembly.Client.csproj  --configuration Release --output release --nologo

    # Changes the base-tag in index.html from '/' to '/PanoramicData.Blazor/' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to /PanoramicData.Blazor/
      run: sed -i 's/<base href="\/" \/>/<base href="\/PanoramicData.Blazor\/" \/>/g' release/wwwroot/index.html

    # Copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # Add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll

    # Deploy to GitHub pages
    - name: Deploy to Github Pages
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BASE_BRANCH: main # The branch the action should deploy from.
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: release/wwwroot # The folder the action should deploy.
        SINGLE_COMMIT: true
